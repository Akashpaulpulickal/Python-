# Define a base class named Animal
class Animal:
    # Method to make a sound (to be overridden by subclasses)
    def make_sound(self):
        raise NotImplementedError("Subclass must implement abstract method")

# Define a subclass named Dog that inherits from Animal
class Dog(Animal):
    # Override the make_sound method
    def make_sound(self):
        return "Woof! Woof!"

# Define a subclass named Cat that inherits from Animal
class Cat(Animal):
    # Override the make_sound method
    def make_sound(self):
        return "Meow! Meow!"

# Define a subclass named Cow that inherits from Animal
class Cow(Animal):
    # Override the make_sound method
    def make_sound(self):
        return "Moo! Moo!"

# Define a function that takes an Animal object and calls its make_sound method
def animal_sound(animal):
    print(animal.make_sound())

# Create objects of the subclasses
dog = Dog()
cat = Cat()
cow = Cow()

# Call the animal_sound function with different objects
animal_sound(dog) # Output: Woof! Woof!
animal_sound(cat) # Output: Meow! Meow!
animal_sound(cow) # Output: Moo! Moo!
